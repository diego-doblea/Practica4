package bananastore.factory;

import bananastore.model.*;

/**
 * Clase Factory encargada de crear instancias de productos.
 */
public class ProductFactory {
    
    /**
     * Crea un producto según el tipo especificado.
     * 
     * @param type   El tipo de producto a crear ("laptop", "celular" o "tablet").
     * @param params Los parámetros necesarios para la creación del producto.
     * @return Una instancia de Product.
     * @throws IllegalArgumentException Si el tipo de producto no es soportado.
     */
    public static Product createProduct(String type, Object... params) {
        switch (type.toLowerCase()) {
            case "laptop":
                // params: marca, modelo, precio, tamanoPantalla, procesador, memoriaRam, almacenamiento
                return new Laptop(
                        (String) params[0],
                        (String) params[1],
                        (Double) params[2],
                        (String) params[3],
                        (String) params[4],
                        (Integer) params[5],
                        (Integer) params[6]
                );
            case "celular":
                // params: marca, modelo, precio, tamanoPantalla, capacidadBateria, cantidadCamaras
                return new Celular(
                        (String) params[0],
                        (String) params[1],
                        (Double) params[2],
                        (String) params[3],
                        (String) params[4],
                        (Integer) params[5]
                );
            case "tablet":
                // params: marca, modelo, precio, tamanoPantalla, compatibilidadLapiz, cantidadCamaras
                return new Tablet(
                        (String) params[0],
                        (String) params[1],
                        (Double) params[2],
                        (String) params[3],
                        (Boolean) params[4],
                        (Integer) params[5]
                );
            default:
                throw new IllegalArgumentException("Tipo de producto no soportado: " + type);
        }
    }
}
